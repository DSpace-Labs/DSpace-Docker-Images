# This file configures each component as a "Pod".
# In order to expose each Pod as a service, I seemed to need to create deployments for the Podss.
# See dspace.deploy.v6.yaml
# https://stackoverflow.com/questions/57317501/kubernetes-modeling-jobs-cron-tasks-for-postgres-tomcat-application
kind: ConfigMap
metadata:
  creationTimestamp: 2016-02-18T19:14:38Z
  name: local-config-map
  namespace: default
data:
  # example of a simple property defined using --from-literal
  #example.property.1: hello
  #example.property.2: world
  # example of a complex property defined using --from-file
  local.cfg: |-
    dspace.dir = /dspace
    db.url = jdbc:postgresql://dspacedb-service:5432/dspace
    dspace.hostname = dspace-service
    dspace.baseUrl = http://dspace-service:8080
    solr.server=http://dspace-service:8080/solr
---
apiVersion: v1
kind: Service
metadata:
  name: dspacedb-service
  labels:
    app: dspacedb-app
spec:
  type: NodePort
  selector:
    app: dspacedb-app
  ports:
  - protocol: TCP
    port: 5432
  #  targetPort: 5432
---
apiVersion: v1
kind: Pod
metadata:
  name: dspacedb-pod
  labels:
    app: dspacedb-app
spec:
  volumes:
  - name: "pgdata-vol"
  # The postgres PGDATA volume cannot be persisted on Windows.  On Windows, use emptyDir.
  # See https://stackoverflow.com/questions/57227990/kubernetes-in-docker-for-windows-volume-configuration-for-postgres
    emptyDir: {}
  containers:
  - image: dspace/dspace-postgres-pgcrypto
    name: dspacedb
    ports:
    - containerPort: 5432
      name: http
      protocol: TCP
    volumeMounts:
    - mountPath: "/pgdata"
      name: "pgdata-vol"
    env:
    - name: PGDATA
      value: /pgdata
---
apiVersion: v1
kind: Service
metadata:
  name: dspace-service
  labels:
    app: dspace-app
spec:
  type: NodePort
  selector:
    app: dspace-app
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
    name: http
---
apiVersion: v1
kind: Pod
metadata:
  name: dspace-pod
  labels:
    app: dspace-app
spec:
  volumes:
  - name: "assetstore"
  # This volume behaves properly on on Windows, but it does not make sense to persist the assetstore
  # if the database cannot be persisted.
    emptyDir: {}
  - name: my-local-config-map
    configMap:
      name: local-config-map
  containers:
  - image: dspace/dspace:dspace-6_x-jdk8-test
    name: dspace
    ports:
    - containerPort: 8080
      name: http
      protocol: TCP
    volumeMounts:
    - mountPath: "/dspace/assetstore"
      name: "assetstore"
    - mountPath: "/dspace/config/local.cfg"
      name: "my-local-config-map"
      subPath: local.cfg
